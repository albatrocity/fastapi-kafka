version: "3.9"
services:
  hunters_incoming:
    build:
      context: ./src
      dockerfile: ./hunters_incoming/Dockerfile
    working_dir: /code
    hostname: hunters_incoming
    container_name: hunters_incoming1
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8004:8000"
    environment:
      - TOPIC=hunters_incoming
    env_file:
      - .env
    volumes:
      - ./src/hunters_incoming/:/code
    networks:
      - my-net

  alerts:
    build:
      context: ./src
      dockerfile: ./alerts/Dockerfile
    working_dir: /code
    hostname: alerts
    container_name: alerts1
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8005:8000"
    environment:
      - TOPIC=alerts
    env_file:
      - .env
    volumes:
      - ./src/alerts:/code
    networks:
      - my-net

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
    networks:
      - my-net

  kafka:
    image: obsidiandynamics/kafka
    container_name: kafka
    restart: "no"
    ports:
      - "2181:2181"
      - "9093:9093"
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9093"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
    healthcheck:
      test: nc -z localhost 29092 || exit
      interval: 10s
      timeout: 5s
      retries: 15
    networks:
      - my-net

networks:
  my-net:
